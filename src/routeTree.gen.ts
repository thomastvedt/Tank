/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as LoginLoginImport } from './routes/_login/login'
import { Route as AppRootOperationalIndexImport } from './routes/_app/_root/_operational/index'
import { Route as AppMachineMachineIdOperationalRouteImport } from './routes/_app/machine.$machineId/_operational/route'
import { Route as AppMachineMachineIdLogisticsRouteImport } from './routes/_app/machine.$machineId/_logistics/route'
import { Route as AppMachineMachineIdOperationalTicketsIndexImport } from './routes/_app/machine.$machineId/_operational/tickets/index'
import { Route as AppMachineMachineIdOperationalEventsIndexImport } from './routes/_app/machine.$machineId/_operational/events/index'
import { Route as AppMachineMachineIdLogisticsPricingIndexImport } from './routes/_app/machine.$machineId/_logistics/pricing/index'
import { Route as AppMachineMachineIdOperationalTicketsNewImport } from './routes/_app/machine.$machineId/_operational/tickets/new'

// Create Virtual Routes

const AppMachineMachineIdImport = createFileRoute('/_app/machine/$machineId')()

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const LoginLoginRoute = LoginLoginImport.update({
  id: '/_login/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppMachineMachineIdRoute = AppMachineMachineIdImport.update({
  id: '/machine/$machineId',
  path: '/machine/$machineId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppRootOperationalIndexRoute = AppRootOperationalIndexImport.update({
  id: '/_root/_operational/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppMachineMachineIdOperationalRouteRoute =
  AppMachineMachineIdOperationalRouteImport.update({
    id: '/_operational',
    getParentRoute: () => AppMachineMachineIdRoute,
  } as any)

const AppMachineMachineIdLogisticsRouteRoute =
  AppMachineMachineIdLogisticsRouteImport.update({
    id: '/_logistics',
    getParentRoute: () => AppMachineMachineIdRoute,
  } as any)

const AppMachineMachineIdOperationalTicketsIndexRoute =
  AppMachineMachineIdOperationalTicketsIndexImport.update({
    id: '/tickets/',
    path: '/tickets/',
    getParentRoute: () => AppMachineMachineIdOperationalRouteRoute,
  } as any)

const AppMachineMachineIdOperationalEventsIndexRoute =
  AppMachineMachineIdOperationalEventsIndexImport.update({
    id: '/events/',
    path: '/events/',
    getParentRoute: () => AppMachineMachineIdOperationalRouteRoute,
  } as any)

const AppMachineMachineIdLogisticsPricingIndexRoute =
  AppMachineMachineIdLogisticsPricingIndexImport.update({
    id: '/pricing/',
    path: '/pricing/',
    getParentRoute: () => AppMachineMachineIdLogisticsRouteRoute,
  } as any)

const AppMachineMachineIdOperationalTicketsNewRoute =
  AppMachineMachineIdOperationalTicketsNewImport.update({
    id: '/tickets/new',
    path: '/tickets/new',
    getParentRoute: () => AppMachineMachineIdOperationalRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_login/login': {
      id: '/_login/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/machine/$machineId': {
      id: '/_app/machine/$machineId'
      path: '/machine/$machineId'
      fullPath: '/machine/$machineId'
      preLoaderRoute: typeof AppMachineMachineIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/machine/$machineId/_logistics': {
      id: '/_app/machine/$machineId/_logistics'
      path: '/machine/$machineId'
      fullPath: '/machine/$machineId'
      preLoaderRoute: typeof AppMachineMachineIdLogisticsRouteImport
      parentRoute: typeof AppMachineMachineIdRoute
    }
    '/_app/machine/$machineId/_operational': {
      id: '/_app/machine/$machineId/_operational'
      path: ''
      fullPath: '/machine/$machineId'
      preLoaderRoute: typeof AppMachineMachineIdOperationalRouteImport
      parentRoute: typeof AppMachineMachineIdImport
    }
    '/_app/_root/_operational/': {
      id: '/_app/_root/_operational/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppRootOperationalIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/machine/$machineId/_operational/tickets/new': {
      id: '/_app/machine/$machineId/_operational/tickets/new'
      path: '/tickets/new'
      fullPath: '/machine/$machineId/tickets/new'
      preLoaderRoute: typeof AppMachineMachineIdOperationalTicketsNewImport
      parentRoute: typeof AppMachineMachineIdOperationalRouteImport
    }
    '/_app/machine/$machineId/_logistics/pricing/': {
      id: '/_app/machine/$machineId/_logistics/pricing/'
      path: '/pricing'
      fullPath: '/machine/$machineId/pricing'
      preLoaderRoute: typeof AppMachineMachineIdLogisticsPricingIndexImport
      parentRoute: typeof AppMachineMachineIdLogisticsRouteImport
    }
    '/_app/machine/$machineId/_operational/events/': {
      id: '/_app/machine/$machineId/_operational/events/'
      path: '/events'
      fullPath: '/machine/$machineId/events'
      preLoaderRoute: typeof AppMachineMachineIdOperationalEventsIndexImport
      parentRoute: typeof AppMachineMachineIdOperationalRouteImport
    }
    '/_app/machine/$machineId/_operational/tickets/': {
      id: '/_app/machine/$machineId/_operational/tickets/'
      path: '/tickets'
      fullPath: '/machine/$machineId/tickets'
      preLoaderRoute: typeof AppMachineMachineIdOperationalTicketsIndexImport
      parentRoute: typeof AppMachineMachineIdOperationalRouteImport
    }
  }
}

// Create and export the route tree

interface AppMachineMachineIdLogisticsRouteRouteChildren {
  AppMachineMachineIdLogisticsPricingIndexRoute: typeof AppMachineMachineIdLogisticsPricingIndexRoute
}

const AppMachineMachineIdLogisticsRouteRouteChildren: AppMachineMachineIdLogisticsRouteRouteChildren =
  {
    AppMachineMachineIdLogisticsPricingIndexRoute:
      AppMachineMachineIdLogisticsPricingIndexRoute,
  }

const AppMachineMachineIdLogisticsRouteRouteWithChildren =
  AppMachineMachineIdLogisticsRouteRoute._addFileChildren(
    AppMachineMachineIdLogisticsRouteRouteChildren,
  )

interface AppMachineMachineIdOperationalRouteRouteChildren {
  AppMachineMachineIdOperationalTicketsNewRoute: typeof AppMachineMachineIdOperationalTicketsNewRoute
  AppMachineMachineIdOperationalEventsIndexRoute: typeof AppMachineMachineIdOperationalEventsIndexRoute
  AppMachineMachineIdOperationalTicketsIndexRoute: typeof AppMachineMachineIdOperationalTicketsIndexRoute
}

const AppMachineMachineIdOperationalRouteRouteChildren: AppMachineMachineIdOperationalRouteRouteChildren =
  {
    AppMachineMachineIdOperationalTicketsNewRoute:
      AppMachineMachineIdOperationalTicketsNewRoute,
    AppMachineMachineIdOperationalEventsIndexRoute:
      AppMachineMachineIdOperationalEventsIndexRoute,
    AppMachineMachineIdOperationalTicketsIndexRoute:
      AppMachineMachineIdOperationalTicketsIndexRoute,
  }

const AppMachineMachineIdOperationalRouteRouteWithChildren =
  AppMachineMachineIdOperationalRouteRoute._addFileChildren(
    AppMachineMachineIdOperationalRouteRouteChildren,
  )

interface AppMachineMachineIdRouteChildren {
  AppMachineMachineIdLogisticsRouteRoute: typeof AppMachineMachineIdLogisticsRouteRouteWithChildren
  AppMachineMachineIdOperationalRouteRoute: typeof AppMachineMachineIdOperationalRouteRouteWithChildren
}

const AppMachineMachineIdRouteChildren: AppMachineMachineIdRouteChildren = {
  AppMachineMachineIdLogisticsRouteRoute:
    AppMachineMachineIdLogisticsRouteRouteWithChildren,
  AppMachineMachineIdOperationalRouteRoute:
    AppMachineMachineIdOperationalRouteRouteWithChildren,
}

const AppMachineMachineIdRouteWithChildren =
  AppMachineMachineIdRoute._addFileChildren(AppMachineMachineIdRouteChildren)

interface AppRouteRouteChildren {
  AppMachineMachineIdRoute: typeof AppMachineMachineIdRouteWithChildren
  AppRootOperationalIndexRoute: typeof AppRootOperationalIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppMachineMachineIdRoute: AppMachineMachineIdRouteWithChildren,
  AppRootOperationalIndexRoute: AppRootOperationalIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof LoginLoginRoute
  '/machine/$machineId': typeof AppMachineMachineIdOperationalRouteRouteWithChildren
  '/': typeof AppRootOperationalIndexRoute
  '/machine/$machineId/tickets/new': typeof AppMachineMachineIdOperationalTicketsNewRoute
  '/machine/$machineId/pricing': typeof AppMachineMachineIdLogisticsPricingIndexRoute
  '/machine/$machineId/events': typeof AppMachineMachineIdOperationalEventsIndexRoute
  '/machine/$machineId/tickets': typeof AppMachineMachineIdOperationalTicketsIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginLoginRoute
  '/machine/$machineId': typeof AppMachineMachineIdOperationalRouteRouteWithChildren
  '/': typeof AppRootOperationalIndexRoute
  '/machine/$machineId/tickets/new': typeof AppMachineMachineIdOperationalTicketsNewRoute
  '/machine/$machineId/pricing': typeof AppMachineMachineIdLogisticsPricingIndexRoute
  '/machine/$machineId/events': typeof AppMachineMachineIdOperationalEventsIndexRoute
  '/machine/$machineId/tickets': typeof AppMachineMachineIdOperationalTicketsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_login/login': typeof LoginLoginRoute
  '/_app/machine/$machineId': typeof AppMachineMachineIdRouteWithChildren
  '/_app/machine/$machineId/_logistics': typeof AppMachineMachineIdLogisticsRouteRouteWithChildren
  '/_app/machine/$machineId/_operational': typeof AppMachineMachineIdOperationalRouteRouteWithChildren
  '/_app/_root/_operational/': typeof AppRootOperationalIndexRoute
  '/_app/machine/$machineId/_operational/tickets/new': typeof AppMachineMachineIdOperationalTicketsNewRoute
  '/_app/machine/$machineId/_logistics/pricing/': typeof AppMachineMachineIdLogisticsPricingIndexRoute
  '/_app/machine/$machineId/_operational/events/': typeof AppMachineMachineIdOperationalEventsIndexRoute
  '/_app/machine/$machineId/_operational/tickets/': typeof AppMachineMachineIdOperationalTicketsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/machine/$machineId'
    | '/'
    | '/machine/$machineId/tickets/new'
    | '/machine/$machineId/pricing'
    | '/machine/$machineId/events'
    | '/machine/$machineId/tickets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/machine/$machineId'
    | '/'
    | '/machine/$machineId/tickets/new'
    | '/machine/$machineId/pricing'
    | '/machine/$machineId/events'
    | '/machine/$machineId/tickets'
  id:
    | '__root__'
    | '/_app'
    | '/_login/login'
    | '/_app/machine/$machineId'
    | '/_app/machine/$machineId/_logistics'
    | '/_app/machine/$machineId/_operational'
    | '/_app/_root/_operational/'
    | '/_app/machine/$machineId/_operational/tickets/new'
    | '/_app/machine/$machineId/_logistics/pricing/'
    | '/_app/machine/$machineId/_operational/events/'
    | '/_app/machine/$machineId/_operational/tickets/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  LoginLoginRoute: typeof LoginLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  LoginLoginRoute: LoginLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_login/login"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/machine/$machineId",
        "/_app/_root/_operational/"
      ]
    },
    "/_login/login": {
      "filePath": "_login/login.tsx"
    },
    "/_app/machine/$machineId": {
      "filePath": "_app/machine.$machineId/_logistics",
      "parent": "/_app",
      "children": [
        "/_app/machine/$machineId/_logistics",
        "/_app/machine/$machineId/_operational"
      ]
    },
    "/_app/machine/$machineId/_logistics": {
      "filePath": "_app/machine.$machineId/_logistics/route.tsx",
      "parent": "/_app/machine/$machineId",
      "children": [
        "/_app/machine/$machineId/_logistics/pricing/"
      ]
    },
    "/_app/machine/$machineId/_operational": {
      "filePath": "_app/machine.$machineId/_operational/route.tsx",
      "parent": "/_app/machine/$machineId",
      "children": [
        "/_app/machine/$machineId/_operational/tickets/new",
        "/_app/machine/$machineId/_operational/events/",
        "/_app/machine/$machineId/_operational/tickets/"
      ]
    },
    "/_app/_root/_operational/": {
      "filePath": "_app/_root/_operational/index.tsx",
      "parent": "/_app"
    },
    "/_app/machine/$machineId/_operational/tickets/new": {
      "filePath": "_app/machine.$machineId/_operational/tickets/new.tsx",
      "parent": "/_app/machine/$machineId/_operational"
    },
    "/_app/machine/$machineId/_logistics/pricing/": {
      "filePath": "_app/machine.$machineId/_logistics/pricing/index.tsx",
      "parent": "/_app/machine/$machineId/_logistics"
    },
    "/_app/machine/$machineId/_operational/events/": {
      "filePath": "_app/machine.$machineId/_operational/events/index.tsx",
      "parent": "/_app/machine/$machineId/_operational"
    },
    "/_app/machine/$machineId/_operational/tickets/": {
      "filePath": "_app/machine.$machineId/_operational/tickets/index.tsx",
      "parent": "/_app/machine/$machineId/_operational"
    }
  }
}
ROUTE_MANIFEST_END */
