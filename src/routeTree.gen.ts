/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as LoginLoginImport } from './routes/_login/login'
import { Route as AppMachineMachineIdRouteImport } from './routes/_app/machine.$machineId/route'
import { Route as AppRootOperationalIndexImport } from './routes/_app/_root/_operational/index'
import { Route as AppstandaloneTicketsNewImport } from './routes/_app/(standalone)/tickets/new'
import { Route as AppMachineMachineIdOperationalRouteImport } from './routes/_app/machine.$machineId/_operational/route'
import { Route as AppMachineMachineIdLogisticsRouteImport } from './routes/_app/machine.$machineId/_logistics/route'
import { Route as AppMachineMachineIdCommercialRouteImport } from './routes/_app/machine.$machineId/_commercial/route'
import { Route as AppMachineMachineIdOperationalIndexImport } from './routes/_app/machine.$machineId/_operational/index'
import { Route as AppMachineMachineIdOperationalTicketsIndexImport } from './routes/_app/machine.$machineId/_operational/tickets/index'
import { Route as AppMachineMachineIdOperationalEventsIndexImport } from './routes/_app/machine.$machineId/_operational/events/index'
import { Route as AppMachineMachineIdCommercialPricingIndexImport } from './routes/_app/machine.$machineId/_commercial/pricing/index'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const LoginLoginRoute = LoginLoginImport.update({
  id: '/_login/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppMachineMachineIdRouteRoute = AppMachineMachineIdRouteImport.update({
  id: '/machine/$machineId',
  path: '/machine/$machineId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppRootOperationalIndexRoute = AppRootOperationalIndexImport.update({
  id: '/_root/_operational/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppstandaloneTicketsNewRoute = AppstandaloneTicketsNewImport.update({
  id: '/(standalone)/tickets/new',
  path: '/tickets/new',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppMachineMachineIdOperationalRouteRoute =
  AppMachineMachineIdOperationalRouteImport.update({
    id: '/_operational',
    getParentRoute: () => AppMachineMachineIdRouteRoute,
  } as any)

const AppMachineMachineIdLogisticsRouteRoute =
  AppMachineMachineIdLogisticsRouteImport.update({
    id: '/_logistics',
    getParentRoute: () => AppMachineMachineIdRouteRoute,
  } as any)

const AppMachineMachineIdCommercialRouteRoute =
  AppMachineMachineIdCommercialRouteImport.update({
    id: '/_commercial',
    getParentRoute: () => AppMachineMachineIdRouteRoute,
  } as any)

const AppMachineMachineIdOperationalIndexRoute =
  AppMachineMachineIdOperationalIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppMachineMachineIdOperationalRouteRoute,
  } as any)

const AppMachineMachineIdOperationalTicketsIndexRoute =
  AppMachineMachineIdOperationalTicketsIndexImport.update({
    id: '/tickets/',
    path: '/tickets/',
    getParentRoute: () => AppMachineMachineIdOperationalRouteRoute,
  } as any)

const AppMachineMachineIdOperationalEventsIndexRoute =
  AppMachineMachineIdOperationalEventsIndexImport.update({
    id: '/events/',
    path: '/events/',
    getParentRoute: () => AppMachineMachineIdOperationalRouteRoute,
  } as any)

const AppMachineMachineIdCommercialPricingIndexRoute =
  AppMachineMachineIdCommercialPricingIndexImport.update({
    id: '/pricing/',
    path: '/pricing/',
    getParentRoute: () => AppMachineMachineIdCommercialRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_login/login': {
      id: '/_login/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/machine/$machineId': {
      id: '/_app/machine/$machineId'
      path: '/machine/$machineId'
      fullPath: '/machine/$machineId'
      preLoaderRoute: typeof AppMachineMachineIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/machine/$machineId/_commercial': {
      id: '/_app/machine/$machineId/_commercial'
      path: ''
      fullPath: '/machine/$machineId'
      preLoaderRoute: typeof AppMachineMachineIdCommercialRouteImport
      parentRoute: typeof AppMachineMachineIdRouteImport
    }
    '/_app/machine/$machineId/_logistics': {
      id: '/_app/machine/$machineId/_logistics'
      path: ''
      fullPath: '/machine/$machineId'
      preLoaderRoute: typeof AppMachineMachineIdLogisticsRouteImport
      parentRoute: typeof AppMachineMachineIdRouteImport
    }
    '/_app/machine/$machineId/_operational': {
      id: '/_app/machine/$machineId/_operational'
      path: ''
      fullPath: '/machine/$machineId'
      preLoaderRoute: typeof AppMachineMachineIdOperationalRouteImport
      parentRoute: typeof AppMachineMachineIdRouteImport
    }
    '/_app/(standalone)/tickets/new': {
      id: '/_app/(standalone)/tickets/new'
      path: '/tickets/new'
      fullPath: '/tickets/new'
      preLoaderRoute: typeof AppstandaloneTicketsNewImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_root/_operational/': {
      id: '/_app/_root/_operational/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppRootOperationalIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/machine/$machineId/_operational/': {
      id: '/_app/machine/$machineId/_operational/'
      path: '/'
      fullPath: '/machine/$machineId/'
      preLoaderRoute: typeof AppMachineMachineIdOperationalIndexImport
      parentRoute: typeof AppMachineMachineIdOperationalRouteImport
    }
    '/_app/machine/$machineId/_commercial/pricing/': {
      id: '/_app/machine/$machineId/_commercial/pricing/'
      path: '/pricing'
      fullPath: '/machine/$machineId/pricing'
      preLoaderRoute: typeof AppMachineMachineIdCommercialPricingIndexImport
      parentRoute: typeof AppMachineMachineIdCommercialRouteImport
    }
    '/_app/machine/$machineId/_operational/events/': {
      id: '/_app/machine/$machineId/_operational/events/'
      path: '/events'
      fullPath: '/machine/$machineId/events'
      preLoaderRoute: typeof AppMachineMachineIdOperationalEventsIndexImport
      parentRoute: typeof AppMachineMachineIdOperationalRouteImport
    }
    '/_app/machine/$machineId/_operational/tickets/': {
      id: '/_app/machine/$machineId/_operational/tickets/'
      path: '/tickets'
      fullPath: '/machine/$machineId/tickets'
      preLoaderRoute: typeof AppMachineMachineIdOperationalTicketsIndexImport
      parentRoute: typeof AppMachineMachineIdOperationalRouteImport
    }
  }
}

// Create and export the route tree

interface AppMachineMachineIdCommercialRouteRouteChildren {
  AppMachineMachineIdCommercialPricingIndexRoute: typeof AppMachineMachineIdCommercialPricingIndexRoute
}

const AppMachineMachineIdCommercialRouteRouteChildren: AppMachineMachineIdCommercialRouteRouteChildren =
  {
    AppMachineMachineIdCommercialPricingIndexRoute:
      AppMachineMachineIdCommercialPricingIndexRoute,
  }

const AppMachineMachineIdCommercialRouteRouteWithChildren =
  AppMachineMachineIdCommercialRouteRoute._addFileChildren(
    AppMachineMachineIdCommercialRouteRouteChildren,
  )

interface AppMachineMachineIdOperationalRouteRouteChildren {
  AppMachineMachineIdOperationalIndexRoute: typeof AppMachineMachineIdOperationalIndexRoute
  AppMachineMachineIdOperationalEventsIndexRoute: typeof AppMachineMachineIdOperationalEventsIndexRoute
  AppMachineMachineIdOperationalTicketsIndexRoute: typeof AppMachineMachineIdOperationalTicketsIndexRoute
}

const AppMachineMachineIdOperationalRouteRouteChildren: AppMachineMachineIdOperationalRouteRouteChildren =
  {
    AppMachineMachineIdOperationalIndexRoute:
      AppMachineMachineIdOperationalIndexRoute,
    AppMachineMachineIdOperationalEventsIndexRoute:
      AppMachineMachineIdOperationalEventsIndexRoute,
    AppMachineMachineIdOperationalTicketsIndexRoute:
      AppMachineMachineIdOperationalTicketsIndexRoute,
  }

const AppMachineMachineIdOperationalRouteRouteWithChildren =
  AppMachineMachineIdOperationalRouteRoute._addFileChildren(
    AppMachineMachineIdOperationalRouteRouteChildren,
  )

interface AppMachineMachineIdRouteRouteChildren {
  AppMachineMachineIdCommercialRouteRoute: typeof AppMachineMachineIdCommercialRouteRouteWithChildren
  AppMachineMachineIdLogisticsRouteRoute: typeof AppMachineMachineIdLogisticsRouteRoute
  AppMachineMachineIdOperationalRouteRoute: typeof AppMachineMachineIdOperationalRouteRouteWithChildren
}

const AppMachineMachineIdRouteRouteChildren: AppMachineMachineIdRouteRouteChildren =
  {
    AppMachineMachineIdCommercialRouteRoute:
      AppMachineMachineIdCommercialRouteRouteWithChildren,
    AppMachineMachineIdLogisticsRouteRoute:
      AppMachineMachineIdLogisticsRouteRoute,
    AppMachineMachineIdOperationalRouteRoute:
      AppMachineMachineIdOperationalRouteRouteWithChildren,
  }

const AppMachineMachineIdRouteRouteWithChildren =
  AppMachineMachineIdRouteRoute._addFileChildren(
    AppMachineMachineIdRouteRouteChildren,
  )

interface AppRouteRouteChildren {
  AppMachineMachineIdRouteRoute: typeof AppMachineMachineIdRouteRouteWithChildren
  AppstandaloneTicketsNewRoute: typeof AppstandaloneTicketsNewRoute
  AppRootOperationalIndexRoute: typeof AppRootOperationalIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppMachineMachineIdRouteRoute: AppMachineMachineIdRouteRouteWithChildren,
  AppstandaloneTicketsNewRoute: AppstandaloneTicketsNewRoute,
  AppRootOperationalIndexRoute: AppRootOperationalIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof LoginLoginRoute
  '/machine/$machineId': typeof AppMachineMachineIdOperationalRouteRouteWithChildren
  '/tickets/new': typeof AppstandaloneTicketsNewRoute
  '/': typeof AppRootOperationalIndexRoute
  '/machine/$machineId/': typeof AppMachineMachineIdOperationalIndexRoute
  '/machine/$machineId/pricing': typeof AppMachineMachineIdCommercialPricingIndexRoute
  '/machine/$machineId/events': typeof AppMachineMachineIdOperationalEventsIndexRoute
  '/machine/$machineId/tickets': typeof AppMachineMachineIdOperationalTicketsIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginLoginRoute
  '/machine/$machineId': typeof AppMachineMachineIdOperationalIndexRoute
  '/tickets/new': typeof AppstandaloneTicketsNewRoute
  '/': typeof AppRootOperationalIndexRoute
  '/machine/$machineId/pricing': typeof AppMachineMachineIdCommercialPricingIndexRoute
  '/machine/$machineId/events': typeof AppMachineMachineIdOperationalEventsIndexRoute
  '/machine/$machineId/tickets': typeof AppMachineMachineIdOperationalTicketsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_login/login': typeof LoginLoginRoute
  '/_app/machine/$machineId': typeof AppMachineMachineIdRouteRouteWithChildren
  '/_app/machine/$machineId/_commercial': typeof AppMachineMachineIdCommercialRouteRouteWithChildren
  '/_app/machine/$machineId/_logistics': typeof AppMachineMachineIdLogisticsRouteRoute
  '/_app/machine/$machineId/_operational': typeof AppMachineMachineIdOperationalRouteRouteWithChildren
  '/_app/(standalone)/tickets/new': typeof AppstandaloneTicketsNewRoute
  '/_app/_root/_operational/': typeof AppRootOperationalIndexRoute
  '/_app/machine/$machineId/_operational/': typeof AppMachineMachineIdOperationalIndexRoute
  '/_app/machine/$machineId/_commercial/pricing/': typeof AppMachineMachineIdCommercialPricingIndexRoute
  '/_app/machine/$machineId/_operational/events/': typeof AppMachineMachineIdOperationalEventsIndexRoute
  '/_app/machine/$machineId/_operational/tickets/': typeof AppMachineMachineIdOperationalTicketsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/machine/$machineId'
    | '/tickets/new'
    | '/'
    | '/machine/$machineId/'
    | '/machine/$machineId/pricing'
    | '/machine/$machineId/events'
    | '/machine/$machineId/tickets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/machine/$machineId'
    | '/tickets/new'
    | '/'
    | '/machine/$machineId/pricing'
    | '/machine/$machineId/events'
    | '/machine/$machineId/tickets'
  id:
    | '__root__'
    | '/_app'
    | '/_login/login'
    | '/_app/machine/$machineId'
    | '/_app/machine/$machineId/_commercial'
    | '/_app/machine/$machineId/_logistics'
    | '/_app/machine/$machineId/_operational'
    | '/_app/(standalone)/tickets/new'
    | '/_app/_root/_operational/'
    | '/_app/machine/$machineId/_operational/'
    | '/_app/machine/$machineId/_commercial/pricing/'
    | '/_app/machine/$machineId/_operational/events/'
    | '/_app/machine/$machineId/_operational/tickets/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  LoginLoginRoute: typeof LoginLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  LoginLoginRoute: LoginLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_login/login"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/machine/$machineId",
        "/_app/(standalone)/tickets/new",
        "/_app/_root/_operational/"
      ]
    },
    "/_login/login": {
      "filePath": "_login/login.tsx"
    },
    "/_app/machine/$machineId": {
      "filePath": "_app/machine.$machineId/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/machine/$machineId/_commercial",
        "/_app/machine/$machineId/_logistics",
        "/_app/machine/$machineId/_operational"
      ]
    },
    "/_app/machine/$machineId/_commercial": {
      "filePath": "_app/machine.$machineId/_commercial/route.tsx",
      "parent": "/_app/machine/$machineId",
      "children": [
        "/_app/machine/$machineId/_commercial/pricing/"
      ]
    },
    "/_app/machine/$machineId/_logistics": {
      "filePath": "_app/machine.$machineId/_logistics/route.tsx",
      "parent": "/_app/machine/$machineId"
    },
    "/_app/machine/$machineId/_operational": {
      "filePath": "_app/machine.$machineId/_operational/route.tsx",
      "parent": "/_app/machine/$machineId",
      "children": [
        "/_app/machine/$machineId/_operational/",
        "/_app/machine/$machineId/_operational/events/",
        "/_app/machine/$machineId/_operational/tickets/"
      ]
    },
    "/_app/(standalone)/tickets/new": {
      "filePath": "_app/(standalone)/tickets/new.tsx",
      "parent": "/_app"
    },
    "/_app/_root/_operational/": {
      "filePath": "_app/_root/_operational/index.tsx",
      "parent": "/_app"
    },
    "/_app/machine/$machineId/_operational/": {
      "filePath": "_app/machine.$machineId/_operational/index.tsx",
      "parent": "/_app/machine/$machineId/_operational"
    },
    "/_app/machine/$machineId/_commercial/pricing/": {
      "filePath": "_app/machine.$machineId/_commercial/pricing/index.tsx",
      "parent": "/_app/machine/$machineId/_commercial"
    },
    "/_app/machine/$machineId/_operational/events/": {
      "filePath": "_app/machine.$machineId/_operational/events/index.tsx",
      "parent": "/_app/machine/$machineId/_operational"
    },
    "/_app/machine/$machineId/_operational/tickets/": {
      "filePath": "_app/machine.$machineId/_operational/tickets/index.tsx",
      "parent": "/_app/machine/$machineId/_operational"
    }
  }
}
ROUTE_MANIFEST_END */
